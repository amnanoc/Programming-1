 add(String num1, String num2) {
        numberOfPotentialAdditions = min(num1.length(),num2.length());

        for (i = 0; i < numberOfPotentialAdditions; i++) {

            digit1 = last digit of number 1
            digit2 = last digit of number 2
            digitSum = digit1 + digit2;

            if (digitSum > 9) {
                carry = 1;
                add the last digit of the sum to the string
            } else {
                if (1 == carry) {
                    digitSum++;
                    carry = 0;
                }

                sum.append(digitSum);
            }
            indexOfNum1--;
            indexOfNum2--;
        }

        //fixing the carry after all the additions
        if (indexOfNum1 != -1 && indexOfNum2 == -1) { //end of nr 2 but not end of nr1
            while (indexOfNum1 != -1 ) {
                digit1 = Integer.parseInt(String.valueOf(num1.charAt(indexOfNum1)));
                ;
                if (digit1 + 1 > 9) {
                    sum.append((digit1 + 1) % 10);
                } else if(carry==1) {
                    sum.append(digit1+1);
                    carry = 0;
                } else {
                    sum.append(digit1);
                }

                if (indexOfNum1 == 0 && carry == 1) {
                    sum.append(1);
                    carry = 0;
                    break;
                }

                indexOfNum1--;
            }
        } else if (indexOfNum2 != -1 && indexOfNum1 == -1) {
            while (indexOfNum2 != -1 ) {
                digit2 = Integer.parseInt(String.valueOf(num2.charAt(indexOfNum2)));
                ;
                if (digit2 + 1 > 9) {
                    sum.append((digit2 + 1) % 10);
                } else if(carry==1) {
                    sum.append(digit2+1);
                    carry = 0;
                } else {
                    sum.append(digit2);
                }

                if (indexOfNum2 == 0 && carry == 1) {
                    sum.append(1);
                    carry = 0;
                    break;
                }

                indexOfNum2--;
            }
        } else if (indexOfNum1 == -1 && indexOfNum2 == -1 && carry == 1)
            sum.append(1);

        sum.reverse();
        return sum.toString();
    }


    subtract(String num1, String num2) {

        if(first number smaller than the second)
            return "Error!";

        numberOfPotentialSubtractions =min(num1.length(), num2.length());


        for (i= 0; i < numberOfPotentialSubtractions; i++) {

            digit1 = last digit of number 1
            digit2 = last digit of number 2
            digitSum = digit1 - digit2;

            if (digitSum < 0) {
                take=1;
                add the last digit of the sum to the string
            } else {
                if (1 == take) {
                    digitSum--;
                    take = 0;
                }

                sum.append(digitSum);
            }
            indexOfNum1--;
            indexOfNum2--;
        }

        //fixing the take after all the subtractions
        if (indexOfNum1 != -1 && indexOfNum2 == -1) { //end of nr 2 but not end of nr1
            while (indexOfNum1 != -1 ) {
                digit1 = Integer.parseInt(String.valueOf(num1.charAt(indexOfNum1)));

                if (digit1-1 < 0) {
                    sum.append((digit1 + 1) % 10);
                } else if(take==1) {
                    sum.append(--digit1);
                    take = 0;
                } else {
                    sum.append(digit1);
                }

                indexOfNum1--;
            }
        }

        sum.reverse();
        return sum;
    }
